buildscript {
  ext {
    springBootVersion = '2.1.8.RELEASE'
    querydslPluginVersion = '1.0.10'  // 플러그인 버전
    hibernateVersion = '5.4.0.Final'
  }
  repositories {
    mavenCentral()
    maven{ url "https://plugins.gradle.org/m2/" } // 플러그인 저장소
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")  // querydsl 플러그인 의존성 등록
    classpath("io.franzbecker:gradle-lombok:3.1.0")
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "io.franzbecker.gradle-lombok"

group = 'com.libedi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
  mavenCentral()
  jcenter()
}


dependencies {
  implementation('org.springframework.boot:spring-boot-starter-data-jpa')
  implementation('org.springframework.boot:spring-boot-starter-web')
  implementation('org.springframework.boot:spring-boot-starter-jta-atomikos')
  implementation('org.springframework.boot:spring-boot-starter-integration')
  compile 'org.springframework.data:spring-data-envers'
  
  compile('com.h2database:h2')
  compile 'org.modelmapper:modelmapper:2.3.2'
  
  annotationProcessor('org.projectlombok:lombok')
  compileOnly('org.projectlombok:lombok')
  testAnnotationProcessor('org.projectlombok:lombok')
  testCompileOnly('org.projectlombok:lombok')
  
  testImplementation('org.springframework.boot:spring-boot-starter-test')
  
  compile("com.querydsl:querydsl-jpa")
  compile("com.querydsl:querydsl-apt")
  
  compile("org.hibernate:hibernate-core:${hibernateVersion}")
  compile("org.hibernate:hibernate-java8:${hibernateVersion}")
  compile("org.hibernate:hibernate-envers:${hibernateVersion}")
}

// querydsl 적용
apply plugin: "com.ewerk.gradle.plugins.querydsl" // plugin 적용
def querydslSrcDir = 'src/main/generated' // QClass 생성 위치

querydsl {
  library = "com.querydsl:querydsl-apt"
  jpa = true
  querydslSourcesDir = querydslSrcDir
}

sourceSets {
  main {
    java {
      srcDirs = ['src/main/java', querydslSrcDir]
    }
  }
}

project.afterEvaluate {
    project.tasks.compileQuerydsl.options.compilerArgs = [
            "-proc:only",
            "-processor", project.querydsl.processors() +
                    ',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
    ]
}

configurations {
    querydsl.extendsFrom compileClasspath
}
